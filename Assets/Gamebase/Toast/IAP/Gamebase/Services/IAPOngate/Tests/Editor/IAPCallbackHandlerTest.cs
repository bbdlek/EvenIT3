//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.18444
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using UnityEngine;
using System;
using Toast.Iap.Ongate;
using Toast.Internal;

[TestFixture()]
public class IAPCallbackHandlerTest
{
	[Test()]
	public void CallbackTest()
	{
		int eventId = IAPCallbackHandler.Instance.AddCallback((Result result, object data) => {
			Assert.AreEqual(true, result.IsSuccessful);
		});

		var callback = IAPCallbackHandler.Instance.GetCallback(eventId);

		callback.Invoke (new Result (true, 0, "success"), null);
	}

	/**
	 * [response example]
	 * {
	 *   "eventId": 1,
	 *   "event": "REQUEST_PURCHASE",
	 *   "isSuccess": true,
	 *   "code": 0,
	 *   "message": "",
	 *   "result": {}
	 * }
	 **/

	[Test()]
	public void HandleCallbackTest()
	{
		int eventId = IAPCallbackHandler.Instance.AddCallback((Result result, object data) => {
			Assert.AreEqual(true, result.IsSuccessful);
		});

		JSONObject json = new JSONObject();
		json ["eventId"].AsInt = eventId;
		json ["event"] = IAPEvent.REQUEST_PURCHASE.ToString();
		json ["isSuccess"].AsBool = true;
		json ["code"].AsInt = 0;
		json ["message"] = "";
		json ["result"] = "";

		string response = json.ToString();
		IAPCallbackHandler.Instance.HandleCallback(response);
	}

	[Test()]
	public void ConfirmErrorCode()
	{
		Console.Write(Toast.Iap.Ongate.IAPErrorType.NETWORK_TIMEOUT_ERROR);
	}
}